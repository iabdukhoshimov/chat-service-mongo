syntax="proto3";

package api_reference_service;
option go_package="genproto/api_reference_service";

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "api_commit_service.proto";

service ApiReferenceService {
    rpc Create (CreateApiReferenceRequest) returns (ApiReference) {}
    rpc Update (ApiReference) returns (ApiReference) {}
    rpc Get (GetApiReferenceRequest) returns (ApiReference) {}
    rpc GetList (GetListApiReferenceRequest) returns (GetListApiReferenceResponse) {}
    rpc Delete (DeleteApiReferenceRequest) returns (google.protobuf.Empty) {}
    rpc GetApiReferenceChanges (GetListApiReferenceChangesRequest) returns (GetListApiReferenceChangesResponse) {}
    rpc RevertApiReference (RevertApiReferenceRequest) returns (ApiReference) {}
    rpc CreateManyApiReference(ManyVersions) returns (google.protobuf.Empty) {}
}

message CreateApiReferenceRequest {
    string name = 1;
    string additional_url = 2;
    string title = 3;
    string desc = 4;
    string method = 5;
    string category_id = 6;
    string external_url = 7;
    bool authentification = 8;
    bool new_window = 9;
    google.protobuf.Struct attributes = 10;
    string project_id = 11;
    string commit_id = 12;
    string version_id = 13;
    string environment_id = 14;
    CommitInfo commit_info = 15;
}

message ApiReference {
    string guid = 1;
    string name = 2;
    string additional_url = 3;
    string title = 4;
    string desc = 5;
    string method = 6;
    string category_id = 7;
    string external_url = 8;
    bool authentification = 9;
    bool new_window = 10;
    google.protobuf.Struct attributes = 11;
    string project_id = 12;
    string version_id = 13;
    string commit_id = 14;
    CommitInfo commit_info = 15;
    string environment_id = 16;
}


message GetApiReferenceRequest {
    string guid = 1;
    string version_id = 2;
    string commit_id = 3;
}

message GetListApiReferenceRequest {
    int64 limit = 1;
    int64 offset = 2;
    string category_id = 3;
    string project_id = 4;
    string version_id = 5;
    string commit_id = 6;
}

message GetListApiReferenceResponse {
    int64 count = 1;
    repeated ApiReference api_references = 2;
}

message DeleteApiReferenceRequest {
    string guid = 1;
    string version_id = 2;
}

message GetListApiReferenceChangesRequest {
    string guid = 1;
    string project_id = 2;
    int64 limit = 3;
    int64 offset = 4;
}



message GetListApiReferenceChangesResponse {
    int64 count = 1;
    string guid = 2;
    message ApiReferenceChange {
        CommitInfo commit_info = 1;
        map<string, VersionInfo> version_infos = 2;
        string created_at = 7;
        string updated_at = 8;
    }
    repeated ApiReferenceChange api_references = 3;
}

message RevertApiReferenceRequest {
    string newcommit_id = 1;
    string version_id = 2;
    string guid = 3; 
    string oldcommit_id = 4;
    string project_id = 5;
    string environment_id = 6;
    CommitInfo commit_info = 7;
}

message ApiRevertApiReferenceRequest {
    string commit_id =1;
    string project_id = 2;
}


message CreateManyApiReferenceRequest {
    repeated ApiReference api_references = 1;
}


message ManyVersions {
    repeated string version_ids = 1;
    string newcommit_id = 2;
    string project_id = 3;
    string environment_id = 4;
    string guid = 5;
    string oldcommit_id = 6;
    CommitInfo commit_info = 7;
    string version_id = 8;
}


message ApiManyVersions {
    repeated string version_ids = 1;
    string project_id = 2;
    string oldcommit_id = 3;
}