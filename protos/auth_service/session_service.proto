syntax="proto3";

package auth_service;
option go_package="genproto/auth_service";
 
import "auth.proto";
import "google/protobuf/empty.proto";

service SessionService {
    rpc Login(LoginRequest) returns (LoginResponse) {}
    rpc Logout(LogoutRequest) returns (google.protobuf.Empty) {}
    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {}
    rpc HasAccess(HasAccessRequest) returns (HasAccessResponse) {}
    rpc HasAccessSuperAdmin(HasAccessSuperAdminReq) returns (HasAccessSuperAdminRes) {}
    rpc V2Login(V2LoginRequest) returns (V2LoginResponse) {}
    rpc V2LoginSuperAdmin(V2LoginSuperAdminReq) returns (V2LoginSuperAdminRes) {}
    rpc V2HasAccess(HasAccessRequest) returns (HasAccessResponse) {}
    rpc V2HasAccessUser(V2HasAccessUserReq) returns (V2HasAccessUserRes) {}
    rpc V2RefreshToken(RefreshTokenRequest) returns (V2RefreshTokenResponse) {}
    rpc V2RefreshTokenSuperAdmin(RefreshTokenRequest) returns (V2RefreshTokenSuperAdminResponse) {}
    rpc SessionAndTokenGenerator (SessionAndTokenRequest) returns (V2LoginResponse) {}
    rpc UpdateSessionsByRoleId (UpdateSessionByRoleIdRequest) returns (google.protobuf.Empty) {}
    rpc MultiCompanyLogin(MultiCompanyLoginRequest) returns (MultiCompanyLoginResponse) {}
    rpc V2MultiCompanyLogin(V2MultiCompanyLoginReq) returns (V2MultiCompanyLoginRes) {}
}

message V2HasAccessUserReq {
    string access_token = 1;
    string project_id = 2;
    string path = 3;
    string method = 4;
}

message V2HasAccessUserRes {
    string id = 1;
    string project_id = 2;
    string user_id = 3;
    string ip = 4;
    string data = 5;
    string expires_at = 6;
    string created_at = 7;
    string updated_at = 8;
    repeated TableBody tables = 9;
    string client_platform_id = 10;
    string client_type_id = 11;
    string role_id = 12;
    string login_table_slug = 13;
}

message LoginRequest {
    string username = 1;
    string password = 2;
    repeated Object tables = 3;
}

message LoginResponse {
    bool user_found = 1;
    ClientPlatform client_platform = 2;
    ClientType client_type = 3;
    User user = 4;
    Role role = 5;
    Token token = 6;
    repeated Permission permissions = 7;
    repeated Session sessions = 8;   
    repeated Company companies = 9;
}

message LogoutRequest {
    string access_token = 1;
}

message RefreshTokenRequest {
    string refresh_token = 2;
}

message RefreshTokenResponse {
    Token token = 6;
}

message V2RefreshTokenResponse {
    Token token = 1;
    repeated RecordPermission permissions = 2;
}

message V2RefreshTokenSuperAdminResponse {
    Token token = 1;
}

message HasAccessRequest {
    string access_token = 1;
    string project_id = 2;
    string client_platform_id = 3;
    string path = 4;
    string method = 5;
}

message HasAccessResponse {
    string id = 1;
    string project_id = 2;
    string client_platform_id = 3;
    string client_type_id = 4;
    string user_id = 5;
    string role_id = 6;
    string ip = 7;
    string data = 8;
    string expires_at = 9;
    string created_at = 10;
    string updated_at = 11;
    repeated TableBody tables = 12;
    string login_table_slug = 13;
}

message HasAccessSuperAdminReq {
    string access_token = 1;
    string project_id = 2;
    string path = 3;
    string method = 4;
}

message HasAccessSuperAdminRes {
    string id = 1;
    string project_id = 2;
    string user_id = 5;
    string ip = 7;
    string data = 8;
    string expires_at = 9;
    string created_at = 10;
    string updated_at = 11;
    repeated TableBody tables = 12;
}

message TableBody {
    string table_slug = 1;
    string object_id = 2;
}

message CreateSessionRequest {
    string project_id = 2;
    string client_platform_id = 3;
    string client_type_id = 4;
    string user_id = 5;
    string role_id = 6;
    string ip = 7;
    string data = 8;
    string expires_at = 9;
    string integration_id = 10;
}

message UpdateSessionRequest {
    string id = 1;
    string project_id = 2;
    string client_platform_id = 3;
    string client_type_id = 4;
    string user_id = 5;
    string role_id = 6;
    string ip = 7;
    string data = 8;
    string expires_at = 9;
    bool is_changed = 10;
}

message SessionPrimaryKey {
    string id = 1;
}

message GetSessionListRequest {
    int32 limit = 1;
    int32 offset = 2;
    string search = 3;
}

message GetSessionListResponse {
    int32 count = 1;
    repeated Session sessions = 2;
}

message Object {
    string table_slug = 1;
    string object_id = 2;
}

message RecordPermission {
    string id = 1;
    string client_type_id = 2;
    string role_id = 3;
    string table_slug = 4;
    string read = 5;
    string write = 6;
    string update = 7;
    string delete = 8;
}

message V2LoginResponse {
    bool user_found = 1;
    ClientPlatform client_platform = 2;
    ClientType client_type = 3;
    string user_id = 4;
    Role role = 5;
    Token token = 6;
    repeated RecordPermission permissions = 7;
    repeated Session sessions = 8;
    string login_table_slug = 9;
    repeated RecordPermission app_permissions = 10;
    string resource_id = 11;
    string environment_id = 12;
    User user = 13;
}
message V2LoginRequest {
    string username = 1;
    string password = 2;
    repeated Object tables = 3;
    string client_type = 4;
    string login_strategy = 5;
    string project_id = 6;
    string resource_environment_id = 7;
}

message V2LoginSuperAdminRes {
    bool user_found = 1;
    string user_id = 2;
    Token token = 3;
    repeated Session sessions = 4;
    repeated Company companies = 5;
}

message V2LoginSuperAdminReq {
    string username = 1;
    string password = 2;
}

message SessionAndTokenRequest  {
    V2LoginResponse login_data = 1;
    repeated Object tables = 2;
    string project_id = 3;
}

message UpdateSessionByRoleIdRequest {
    string role_id = 1;
    bool is_changed = 2;
}

message UpdateSessionBySessionIdRequest {
    string id = 1;
    bool is_changed = 2;
}

message V2SuperAdminLoginResponse {
    bool user_found = 1;
    ClientPlatform client_platform = 2;
    ClientType client_type = 3;
    string user_id = 4;
    Role role = 5;
    Token token = 6;
    repeated RecordPermission permissions = 7;
    repeated Session sessions = 8;
    string login_table_slug = 9;
    repeated RecordPermission app_permissions = 10; 
    repeated Company companies = 11;
}

message MultiCompanyLoginRequest {
    string username = 1;
    string password = 2;
}

message V2MultiCompanyLoginReq {
    string username = 1;
    string password = 2;
}

message V2MultiCompanyLoginRes {
    message Company {
        message Project {
            string id = 1;
            string company_id = 2;
            string name = 3;
            string domain = 4;
            string created_at = 5;
            string updated_at = 6;
        }
        string id = 1;
        string name = 2;
        string logo = 3;
        string description = 4;
        string created_at = 5;
        string updated_at = 6;
        string owner_id = 7;
        repeated Project projects = 8;
    }

    repeated Company companies = 1;
}

message MultiCompanyLoginResponse {
    message Company {
        message Project {
            string id = 1;
            string company_id = 2;
            string name = 3;
            string domain = 4;
            string created_at = 5;
            string updated_at = 6;
        }
        string id = 1;
        string name = 2;
        string logo = 3;
        string description = 4;
        string created_at = 5;
        string updated_at = 6;
        string owner_id = 7;
        repeated Project projects = 8;
    }

    repeated Company companies = 1;
    repeated ClientType client_types = 2;
}